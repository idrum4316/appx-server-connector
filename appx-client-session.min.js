/*********************************************************************
 **
 **   server/appx-client-session.js - Client Session processing
 **
 **   This module contains code to process client sessions.
 **
 *********************************************************************/
"use strict"
function start_session(){if(sessionVariableInit()){if(appxSetStatusStateText(APPX_STATE_BUSY),$("#appx-status-msg").text("Connecting...\n\n"),"true"===$("meta[name=appx-allow-specific]").attr("content")){var s=parseQueryString()
if(s.hasOwnProperty("specific")&&$($("meta[name=appx-use-specific]")[0]).attr("content",s.specific),"true"===$("meta[name=appx-use-specific]").attr("content"))return void startSpecificProcess(!0)}sendappxlogin(appxLoginFormHost,appxLoginFormPort,appxLoginFormUser,appxLoginFormPswd,appxLoginFormRows,appxLoginFormCols)}}function session_management(){if(sessionVariableInit()){appxSetStatusStateText(APPX_STATE_BUSY),$("#appx-status-msg").text("Connecting to session management...\n\n")
var s={}
s.runApplication="0LA",s.runDatabase="   ",s.runProcessType="INPUT",s.runProcess="SESSION_MANAGEMENT",s.filler="",$("#appx_server").val()&&(appxLoginFormHost=$("#appx_server").val()),$("#appx_port").val()&&(appxLoginFormPort=$("#appx_port").val()),$("#appx_username").val()&&(appxLoginFormUser=$("#appx_username").val()),$("#appx_password").val()&&(appxLoginFormPswd=$("#appx_password").val()),$("#appx_rows").val()&&(s.screenRows=$("#appx_rows").val()),$("#appx_cols").val()&&(s.screenColumns=$("#appx_cols").val()),sendappxnewsessionlogin(appxLoginFormHost,appxLoginFormPort,appxLoginFormUser,appxLoginFormPswd,s)}}function startSpecificProcess(s){if(!s||sessionVariableInit()){appxSetStatusStateText(APPX_STATE_BUSY),appxClearStatusMsgText(),$("#appx-status-msg").text("Connecting to session management...\n\n")
var e={}
e.filler=""
var a=!0
if(s?($("#appx_server").val()&&(appxLoginFormHost=$("#appx_server").val()),$("#appx_port").val()&&(appxLoginFormPort=$("#appx_port").val()),$("#appx_username").val()&&(appxLoginFormUser=$("#appx_username").val()),$("#appx_password").val()&&(appxLoginFormPswd=$("#appx_password").val())):(appxLoginFormUser=$("meta[name=appx-auto-user]").attr("content"),appxLoginFormPswd=$("meta[name=appx-auto-pswd]").attr("content"),appxLoginFormHost=$("meta[name=appx-auto-host]").attr("content"),appxLoginFormPort=$("meta[name=appx-auto-port]").attr("content")),$("#appx_rows").val()&&(e.screenRows=$("#appx_rows").val()),$("#appx_cols").val()&&(e.screenColumns=$("#appx_cols").val()),"true"===$("meta[name=appx-allow-specific]").attr("content")&&"true"===$("meta[name=appx-use-specific]").attr("content")){$("meta[name=appx-application]").attr("content")&&$("meta[name=appx-database]").attr("content")&&$("meta[name=appx-procType]").attr("content")&&$("meta[name=appx-process]").attr("content")?(e.runApplication=$("meta[name=appx-application]").attr("content"),e.runDatabase=$("meta[name=appx-database]").attr("content"),e.runProcessType=$("meta[name=appx-procType]").attr("content"),e.runProcess=$("meta[name=appx-process]").attr("content")):a=!1
var p=parseQueryString()
if(p.hasOwnProperty("application")&&(a=!0,e.runApplication=p.application,e.runDatabase=p.database,e.runProcessType=p.procType,e.runProcess=p.process),e.runApplication||e.runDatabase||e.runProcessType||e.runProcess||(a=!1),!a)return void displaySessionError()}sendappxnewsessionlogin(appxLoginFormHost,appxLoginFormPort,appxLoginFormUser,appxLoginFormPswd,e)}}function sendappxlogin(s,e,a,p,n,o){appx_session.appxResourceUrl+=s+"/"+e+"/",appx_session.host=s,appx_session.port=e,appx_session.user=a,appx_session.password=p,appx_session.screenrows=parseInt(n)+3,appx_session.screencols=parseInt(o),appx_session.setProp("screenRows",n),appx_session.setProp("screenColumns",o)
var r={cmd:"appxlogin",args:[s,e,a,p],handler:"appxloginhandler",data:null}
appx_session.ws.send(JSON.stringify(r)),appx_session.loginTimer()}function sendappxlocalconnector(s){var e={cmd:"localconnector",args:[s],handler:"appxlocalconnectorhandler",data:null}
appx_session.ws.send(JSON.stringify(e))}function sendappxreconnect(s,e,a,p,n){var o={cmd:"appxreconnect",args:[s,e,a,p,n],handler:"appxreconnecthandler",data:null}
appx_session.ws.send(JSON.stringify(o))}function sendappxnewsession(s,e,a,p,n,o,r){r.remoteHost||(r.remoteHost=s),r.remotePort||(r.remotePort=e),r.remoteUser||(r.remoteUser=a),r.remotePassword||(r.remotePassword=p),r.screenRows||(r.screenRows=n),r.screenColumns||(r.screenColumns=o),localStorage.newsession=JSON.stringify(r),appx_session.connected=!1,window.open(window.location.href,"new_session"+Date.now(),"toolbar=yes, scrollbars=yes, resizable=yes, location=yes, menubar=yes, status=yes, titlebar=yes")}function sendappxnewsessionlogin(s,e,a,p,n){if(n.reconnectId)return void sendappxreconnect(s,e,a,p,""+n.reconnectId)
appx_session.host=s,appx_session.port=e,appx_session.user=a,appx_session.password=p,n.screenRows&&(appx_session.screenrows=parseInt(n.screenRows)+3),n.screenColumns&&(appx_session.screencols=parseInt(n.screenColumns))
var o={cmd:"appxnewsession",args:[s,e,a,p,n.runApplication,n.runDatabase,n.runProcessType,n.runProcess,n.filler,n.reconnectId],handler:"appxloginhandler",data:null}
appx_session.ws.send(JSON.stringify(o)),appx_session.loginTimer()}function sendappxinit(){var s={cmd:"appxmessage",args:[0,0,0,2,3,0,0,0],handler:"appxinithandler",data:null}
appx_session.ws.send(JSON.stringify(s)),s={cmd:"appxmessage",args:appxclientversion,handler:"appxinithandler",data:null},appx_session.ws.send(JSON.stringify(s))}function sendappxfeatures(s){appx_session.server_feature_mask=s.data
var e={cmd:"appxmessage",args:appx_session.feature_mask,handler:"appxfeatureshandler",data:null}
appx_session.ws.send(JSON.stringify(e))}function sendappxextendedfeatures(s){appx_session.server_extended_feature_mask=s.data,appx_session.server_extended_feature_mask&TMNET_FEATURE2_APPX64_BIT?appx_session._APPX64=!0:appx_session._APPX64=!1
var e={cmd:"appxmessage",args:appx_session.extended_feature_mask,handler:"appxextendedfeatureshandler",data:null}
appx_session.ws.send(JSON.stringify(e))}function sendappxconstants(){var s=[["pref.readServerStack","true"],["screen.height",screen.height.toString()],["screen.width",screen.width.toString()],["browser.name",navigator.appName],["browser.version",navigator.appVersion],["browser.userAgent",navigator.userAgent],["browser.language",navigator.language],["client.version",appx_session.getProp("serverConnectorVersionStr")],["client.version.num",appx_session.getProp("serverConnectorVersionNum").toString()],["localConnector",appx_session.localConnectorRunning.toString()],["line.separator",appx_session.lineSeparator]]
for(var e in appx_session.options)"["!=e.charAt(0)&&appx_session.options.hasOwnProperty(e)&&((""+appx_session.getProp(e)).length>0&&null!=appx_session.getProp(e)?s.push(["pref."+e,""+appx_session.getProp(e)]):s.push(["pref."+e," "]))
var a=[]
a=a.concat(hton32(s.length))
for(var p=0;p<s.length;p++)a=a.concat(hton32(s[p][0].length)),a=a.concat(Str2byteArray(s[p][0])),a=a.concat(hton32(s[p][1].length)),a=a.concat(Str2byteArray(s[p][1]))
var n={cmd:"appxmessage",args:a,handler:"appxconstantshandler",data:null}
appx_session.ws.send(JSON.stringify(n))}function sendappxattach(){var s={cmd:"appxmessage",args:[0,0,0,appx_session.screenrows,0,0,0,appx_session.screencols],handler:"appxattachhandler",data:null}
appx_session.ws.send(JSON.stringify(s))
var s={cmd:"appxmessage",args:[0,0,0,appx_session.screenrows,0,0,0,appx_session.screencols],handler:"appx_attach_handler",data:null}
appx_session.ws.send(JSON.stringify(s))
var s={cmd:"appxmessage",args:[0,0,0,appx_session.screenrows,0,0,0,appx_session.screencols],handler:"appxattachhandler",data:null}
appx_session.ws.send(JSON.stringify(s))}function sendappxkeymap(){var s={cmd:"appxmessage",args:[0,0,0,1],handler:"appxdataentryhandler",data:null}
appx_session.ws.send(JSON.stringify(s))}function appxpinghandler(){sendappxping()}function sendappxping(){var s={cmd:"appxmessage",args:[0,0],handler:"appxpinghandler",data:null}
appx_session.ws.send(JSON.stringify(s))}function appxloginhandler(s){var e=s
"SUCCESS"==e.transresult?(loggedin=!0,$("#appx_login_modul").hide(),appxUseSoftkeys&&$("#softkeys_showhide").show(),$("#defaulttools_showhide").show(),$("#appx-status-msg").text("Logged In Sucessfully...\n\n"),e.ca&&appx_session.localConnectorRunning===!0&&localConnectorUpdateCertificate(e.ca)):(loggedin=!1,alert(appx_session.language.alerts.loginError+e.data),window.location.reload(),appxSetStatusStateText(APPX_STATE_READY))}function appxfinishhandler(s){if(localStorage.appx_prev_pids){for(var e=JSON.parse(localStorage.appx_prev_pids),a=Date.now()-288e4,p=0;p<e.length;p++)(e[p].PID===appx_session.pid||e[p].created<a)&&e.splice(p,1)
localStorage.appx_prev_pids=JSON.stringify(e)}appx_session.connected=!1,"true"==appxCloseOnExit?(close(),history.back()):"back"==appxCloseOnExit?history.back():"Enter Redirect Website Here"!==$("meta[name=appx-browser-redirect]").attr("content")&&"true"===$("meta[name=appx-use-noLogin]").attr("content")?window.location.href=$("meta[name=appx-browser-redirect]").attr("content"):location.reload(!0),window.name.indexOf("new_session")!=-1&&window.close()}function appxreconnecthandler(s){var e=s
if(e){var a={cmd:"appxmessage",args:[0,0,0,0],handler:"appxresourcehandler",data:null}
appx_session.ws.send(JSON.stringify(a))}else;}function appxinithandler(s){sendappxinit()}function appxfeatureshandler(s){sendappxfeatures(s)}function appxextendedfeatureshandler(s){sendappxextendedfeatures(s)}function setPrefsFromQueryParams(s){for(var e=window.location.search.substring(1),a=e.split("&"),p={},n=0;n<a.length;n++){var o=a[n].split("=")
p[o[0]]=o[1]}for(var r in p)appx_session.options.hasOwnProperty(r)&&(appx_session.options[r].prop[10]=p[r])
s()}function appxconstantshandler(s){setPrefsFromQueryParams(function(){sendappxconstants()
var e=s.data
for(var a in e)switch(a){case"ENCODING_RAW":appx_session.rawEncoding=e[a]
break
default:console.log(a+" not currently known, please check constansts being sent from engine")}})}function appxattachhandler(){appx_session.connected=!0,sendappxattach()}function appxkeymaphandler(){sendappxkeymap()}function appxpidhandler(s){appx_session.pid=ab2str(s.data),appxSetStatusPIDText(appx_session.pid),appx_session.setProp("lastPid",appx_session.pid),appx_session.setProp("lastHost",appx_session.server),appx_session.setProp("lastPort",appx_session.port),appx_session.localConnectorRunning===!0&&initialize_localos_directories(appx_session.getProp("cachePath")+appx_session.fileseparatorchar),$("title").html(appx_session.getProp("windowTitle"))
var e,a={server:appx_session.server,PID:appx_session.pid,created:Date.now()}
e=localStorage.appx_prev_pids?JSON.parse(localStorage.appx_prev_pids):[],e.push(a),localStorage.appx_prev_pids=JSON.stringify(e),appx_session.uploadURL=appxProtocol+"://"+appxConnectorHost+":"+appxConnectorMongoPort+appxConnectorPathHttp+"/upload/"+appx_session.user+"_"+appx_session.pid.trim()+"/",appx_session.userPrefsURL=appxProtocol+"://"+appxConnectorHost+":"+appxConnectorMongoPort+appxConnectorPathHttp+"/userPrefs/"+appx_session.user+"/"
var p=new XMLHttpRequest
p.open("GET",appx_session.userPrefsURL+"preferences"),p.onload=function(){try{appx_session.tablePreferences=JSON.parse(p.response)}catch(s){console.log(s),appx_session.tablePreferences={}}},p.send()}function displaySessionError(){var s=" is a required field."
s=appxLoginFormHost?appxLoginFormPort?appxLoginFormUser?appxLoginFormPswd?appxLoginFormRows?appxLoginFormCols?"Logging user in to specific process has failed":"Cols"+s:"Rows"+s:"Password"+s:"Username"+s:"Port"+s:"Server"+s,$("#appx-status-msg").text(s),$("#appx-status-msg").css("background-color","red")}function sessionVariableInit(){var s=!1
return $("#appx-status-msg").removeAttr("style"),$("#appx_server").val()&&(appxLoginFormHost=$("#appx_server").val()),$("#appx_port").val()&&(appxLoginFormPort=$("#appx_port").val()),$("#appx_username").val()&&(appxLoginFormUser=$("#appx_username").val()),$("#appx_password").val()&&(appxLoginFormPswd=$("#appx_password").val()),$("#appx_rows").val()&&(appxLoginFormRows=$("#appx_rows").val()),$("#appx_cols").val()&&(appxLoginFormCols=$("#appx_cols").val()),appxLoginFormHost&&appxLoginFormPort&&appxLoginFormUser&&appxLoginFormPswd&&appxLoginFormRows&&appxLoginFormCols?(appx_session.server=appxLoginFormHost,appx_session.port=appxLoginFormPort,appx_session.user=appxLoginFormUser,appx_session.password=appxLoginFormPswd,s=!0):displaySessionError(),s}$(function(){checkLogin()})
